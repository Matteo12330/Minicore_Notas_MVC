// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minicore_Notas_MVC.Data;

#nullable disable

namespace Minicore_Notas_MVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Minicore_Notas_MVC.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("GradeValue")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2023, 10, 1),
                            GradeValue = 8.5,
                            Name = "Deber 1",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2023, 10, 2),
                            GradeValue = 9.5,
                            Name = "Prueba 1",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2023, 10, 3),
                            GradeValue = 10.0,
                            Name = "Control 1",
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("Minicore_Notas_MVC.Models.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Start")
                        .HasColumnType("TEXT");

                    b.Property<int>("Weigh")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Periods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateOnly(2023, 11, 25),
                            Start = new DateOnly(2023, 9, 27),
                            Weigh = 25
                        },
                        new
                        {
                            Id = 2,
                            End = new DateOnly(2024, 1, 8),
                            Start = new DateOnly(2023, 11, 26),
                            Weigh = 35
                        },
                        new
                        {
                            Id = 3,
                            End = new DateOnly(2024, 9, 30),
                            Start = new DateOnly(2024, 1, 9),
                            Weigh = 40
                        });
                });

            modelBuilder.Entity("Minicore_Notas_MVC.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Juan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pedro"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Maria"
                        });
                });

            modelBuilder.Entity("Minicore_Notas_MVC.Models.Grade", b =>
                {
                    b.HasOne("Minicore_Notas_MVC.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Minicore_Notas_MVC.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
